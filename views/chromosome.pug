script(src='javascripts/echarts.js')
script(src='javascripts/jquery-3.6.0.js')
link(href='stylesheets/bootstrap.css', rel='stylesheet')
script(src='javascripts/bootstrap.bundle.js')

//- #main(style='width: 100%; height: 250px')
script.
  //- var chartDom = document.getElementById("main");
  //- var myChart = echarts.init(chartDom, null, { renderer: "canvas" });
  fetch("data/chResults.json")
    .then(response => response.json())
    .then(data => {
      let color = ["#bd6d6c", "#7b9ce1", "#75d874", "#75d874"];
      let deeper = ["#955", "#68c", "#6b6", "#6b6"];
      function renderItem(params, api) {
        //- 0:index, 1:start, 2:end, 3:exon, 4:type, 5:name, 6:product
        let categoryIndex = api.value(0);
        let mid = api.coord([(api.value(1) + api.value(2)) / 2, 0]);
        let width = api.size([api.value(2) - api.value(1), 0])[0];
        let height = api.size([0, api.value(9)])[1] * 2;
        if (api.value(4) == 3) height = api.size([0, 1])[1] * 2;
        let textContent = {
          style: {
            text: api.value(5),
            fill: "#444d",
          },
          emphasis: {
            style: {
              text: api.value(5),
              fill: "#000f",
            },
          },
        };
        let textConfig = { position: "top" };

        let shape = {
          x: mid[0] - width / 2,
          y: mid[1] - height / 2,
          width: width,
          height: height,
        };
        let result = {
          type: "rect",
          shape: shape,
          style: api.style({
            fill: color[api.value(4)],
          }),
          //- textConfig: textConfig,
          //- textContent: textContent,
        };
        if (api.value(4) == 3) {
          //-   result.textConfig = textConfig;
          //-   result.textContent = textContent;
        }
        return result;
        //- }
      }
      let offset = 0;
      for (let ii = 0; ii < data.length; ii++) {
        if (data[ii].chromosome.includes("NW")) {
          continue;
        }
        let option;
        let maxExon = 1;
        let chromosome = data[ii];
        $("body").append('<div class="d-flex justify-content-center">' + chromosome["species"] + " " + chromosome["chromosome"]);
        $("body").append('<div id="main' + ii + '"style="width: 95%; height: 150px; margin:auto;"></div></div>');
        let chartDom = document.getElementById("main" + ii);
        let myChart = echarts.init(chartDom, null, { renderer: "canvas" });
        let datas = [];
        for (let i = 0; i < chromosome["data"].length; i++) {
          let c = chromosome["data"][i];
          let color = "red";
          let height = c.exon;
          height = 1;
          let label = {};
          if (c.type == "3") {
            color = "blue";
            offset = (offset + 1) % 3;
            datas.push({
              value: [0, c.start, c.end, c.exon, c.type, c.gene, c.product, c.exactStart.toLocaleString(), c.exactEnd.toLocaleString(), height, offset],
              label: {
                formatter: function (param) {
                  return param.value[5];
                },
                show: true,
                position: "left",
                padding: 5,
                borderColor: "#0000",
                borderWidth: 1,
              },
              labelLine: {
                show: true,
                smooth: true,
              },
            });
          } else datas.push({ value: [0, c.start, c.end, c.exon, c.type, c.gene, c.product, c.exactStart.toLocaleString(), c.exactEnd.toLocaleString(), height, offset] });
          maxExon = Math.max(maxExon, height);
        }
        option = {
          //-   title: {
          //-     text: chromosome["species"] + " " + chromosome["chromosome"],
          //-     left: "center",
          //-     top: "top",
          //-     textStyle: {
          //-       fontSize: 20,
          //-       fontWeight: "bold",
          //-     },
          //-   },
          tooltip: {
            formatter: params => {
              return params.value[5] + "<br> number of exon: " + params.value[3] + "<br>product: " + params.value[6] + "<br>start: " + params.value[7] + "<br>end: " + params.value[8];
            },
          },
          grid: {
            bottom: 0,
            left: "3%",
            right: 0,
            containLabel: true,
          },
          legend: {},
          xAxis: {
            max: chromosome["end"],
            splitNumber: 3,
            splitLine: {
              show: false,
            },
            axisTick: {
              show: false,
            },
            axisLabel: {
              show: false,
            },
          },
          yAxis: {
            name: "number of exon",
            nameLocation: "middle",
            axisLabel: {
              show: false,
            },
            min: -maxExon,
            max: maxExon,
            interval: 1,
          },
          series: [
            {
              type: "custom",
              renderItem: renderItem,
              encode: {
                x: [1, 2],
                itemName: 5,
              },
              data: datas,
              labelLayout: params => {
                //- let points = params.labelLinePoints;
                //- console.log(params);
                //- points[2][0] = params.labelRect.x + params.labelRect.width / 2;
                return {
                  dx: -30,
                  y: 15,
                  align: "left",
                  moveOverlap: "shiftX",
                  //- labelLinePoints: points,
                };
              },
            },
          ],
        };
        myChart.setOption(option);
      }
    });
